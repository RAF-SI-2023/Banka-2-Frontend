presubmits:
  - name: pull-banka-2-frontend
    always_run: true
    decorate: true
    spec:
      containers:
        - image: harbor.k8s.elab.rs/base-images/base:java-21-node-18-docker
          command:
            - /bin/bash
            - -c
            - |
              set -euo pipefail

              collectCypressMedia() {
                if [ -d "./cypress/screenshots" ]; then
                  cp -r ./cypress/screenshots /logs/artifacts
                  echo "${GCSWEB_URL}/prow-logs/pr-logs/pull/${REPO_OWNER}_${REPO_NAME}/${PULL_NUMBER}/${JOB_NAME}/${BUILD_NUMBER}/artifacts/screenshots" > /logs/artifacts/screenshots.link.txt
                else
                  echo "No screenshots to copy. All tests have passed."
                fi
              }

              npm ci
              npm run cy:verify
              npm run cy:info

              npm run build

              cd ..
              git clone https://github.com/RAF-SI-2023/Banka-2-Backend.git ./Banka-2-Backend
              git clone https://github.com/RAF-SI-2023/Banka-2-Infrastructure.git ./Banka-2-Infrastructure

              cd ./Banka-2-Infrastructure
              echo "BACKEND_ABSOLUTE_PATH=/home/prow/go/src/github.com/RAF-SI-2023/Banka-2-Backend" > .env 
              echo "FRONTEND_ABSOLUTE_PATH=/home/prow/go/src/github.com/RAF-SI-2023/Banka-2-Frontend" >> .env
              echo "INFRASTRUCTURE_ABSOLUTE_PATH=/home/prow/go/src/github.com/RAF-SI-2023/Banka-2-Infrastructure" >> .env

              start-docker.sh
              docker compose up -d

              cd ..
              cd ./Banka-2-Frontend

              sleep 500
              npm install cypress --save-dev
              trap collectCypressMedia EXIT
              #npx cypress run
          securityContext:
            privileged: true
          imagePullPolicy: Always
